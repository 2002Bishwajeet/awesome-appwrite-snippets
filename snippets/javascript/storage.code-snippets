{
  "Initialize Storage": {
    "scope": "javascript",
    "prefix": ["storage"],
    "body": ["const Storage storage = Storage(client);"],
    "description": "Create a Storage object and initialize it."
  },

  "Create File": {
    "scope": "javascript",
    "prefix": "createFile",
    "body": [
      "const response = await storage.createFile(\"${1:bucketId}\" ,\"${2:fileId}\",document.getElementById('uploader').files[0] );"
    ],
    "description": "Create a new file. The user who creates the file will automatically be assigned to read and write access unless he has passed custom values for read and write arguments."
  },

  "List Files": {
    "scope": "javascript",
    "prefix": "listFiles",
    "body": ["const response = await storage.listFiles(\"${1:bucketId}\" );"],
    "description": "Get a list of all the user files. You can use the query params to filter your results. On admin mode, this endpoint will return a list of all of the project's files."
  },

  "Get File": {
    "scope": "javascript",
    "prefix": "getFile",
    "body": [
      "const response = await storage.getFile(\"${1:bucketId}\" ,\"${2:fileId}\");"
    ],
    "description": "Get a file by its unique ID."
  },

  "Get File Preview": {
    "scope": "javascript",
    "prefix": "getFilePreview",
    "body": [
      "const response = await storage.getFilePreview(\"${1:bucketId}\" ,\"${2:fileId}\");"
    ],
    "description": "Get a file preview by its unique ID."
  },

  "Get File for Download": {
    "scope": "javascript",
    "prefix": "getFileForDownload",
    "body": [
      "const response = await storage.getFileDownload(\"${1:bucketId}\" ,\"${2:fileId}\");"
    ],
    "description": "Get a file for download by its unique ID."
  },

  "Get File for View": {
    "scope": "javascript",
    "prefix": "getFileForView",
    "body": [
      "const response = await storage.getFileView(\"${1:bucketId}\",\"${2:fileId}\");"
    ],
    "description": "Get a file content by its unique ID. This endpoint is similar to the download method but returns with no 'Content-Disposition: attachment' header."
  },

  "Update File": {
    "scope": "javascript",
    "prefix": "updateFile",
    "body": [
      "const response = await storage.updateFile(\"${1:bucketId}\" ,\"${2:fileId}\", [\"${3:read}\"],[\"${4:write}\"]);"
    ],
    "description": "Update a file by its unique ID. Only users with write permissions have access to update this resource."
  },

  "Delete File": {
    "scope": "javascript",
    "prefix": "deleteFile",
    "body": ["await storage.deleteFile(\"${1:bucketId}\" ,\"${2:fileId}\");"],
    "description": "Delete a file by its unique ID. Only users with write permissions have access to delete this resource."
  }
}
